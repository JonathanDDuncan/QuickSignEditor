
Expression
  = Sign

Sign =  sort:Sorting ?  sign:UnSortedSign
	{ return  { sorting: sort, sign: sign } }
UnSortedSign = prefix:SignPrefix symbols:SymbolCoordinate *
	{ return  { lane: prefix.lane, coordinate: prefix.signcoordinate, symbols: symbols } }
SymbolCoordinate = symb:Symbol coord:Coordinate
	{ return { k: symb, x: coord.x , y: coord.y

    } }

Sorting = "A" symbols: Symbol *
	{ return  symbols  }


Symbol =
	result: "S"[123][0-9a-f][0-9a-f][0-5][0-9a-f]
   {return text()}

SignPrefix = lane:[BLMR] signcoordinate: Coordinate ?
	{return { lane: lane, signcoordinate:signcoordinate}}


Coordinate = x1:ThreeInts CoordinateSpacer y1:ThreeInts
  {

      return { x: x1, y : y1 };
    }

ThreeInts "threeints"
	 = [0-9][0-9][0-9]  { return parseInt(text(), 10); }

Integer "integer"
  = [0-9]+ { return parseInt(text(), 10); }

CoordinateSpacer "coordinatespacer"
  = [Xx]

_ "whitespace"
  = [ \t\n\r]*
